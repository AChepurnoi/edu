data
data$tenure <- scale(data$tenure)
data$age <- scale(data$age)
data$address <-  scale(data$address)
data$income <-  scale(data$income)
data$employ <-  scale(data$employ)
data$longmon <-  scale(data$longmon)
data$wiremon <- scale(data$wiremon)
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1, standardize = FALSE)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
plot.glmnet(lasso, xvar='lambda', label=TRUE)
?geom_roc
install.packages("pROC")
install.packages("pROC")
```
library(pROC)
?roc
roc( as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
roc(as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit),data)
roc(as.factor(churn), predict(log.best))
roc(as.factor(data$churn), predict(log.best))
plot(roc(as.factor(data$churn), predict(log.best)))
plot(roc(as.factor(data$churn), predict(log.best)), print.auc = TRUE)
predict(log.best)
log.best$fitted.values
?gls
?predict
log.best$fitted.values
data$churn
as.factor(data$churn)
as.factor(data$churn) == log.best$fitted.values
log.best$fitted.values
log.best$fitted.values
View(log.best)
rpart
install.packages('rpart')
library(rpart)
rpart(longmon ~ ., data=data)
tree = rpart(longmon ~ ., data=data)
summary(tree)
?prute
?prune
tree
prune(tree, cp=0.1)
prune(tree, cp=0.2)
prune(tree, cp=0.5)
prune(tree, cp=0.1)
View(tree)
data <- read_tsv('../data/telco.txt') %>% select(-index)
View(lasso)
data <- read_tsv('../data/telco.txt') %>% select(-index)
library (dplyr)
library (dplyr)
library(tidyverse)
library(glmnet)
library(tidyverse)
library(glmnet)
library(ggplot2)
library("nlme")
library(pROC)
library(rpart)
data <- read_tsv('../data/telco.txt') %>% select(-index)
data
data$tenure <- scale(data$tenure)
data$age <- scale(data$age)
data$address <-  scale(data$address)
data$income <-  scale(data$income)
data$employ <-  scale(data$employ)
data$longmon <-  scale(data$longmon)
data$wiremon <- scale(data$wiremon)
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1, standardize = FALSE)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
lasso
summary(lasso)
coef(lasso)
data <- read_tsv('../data/telco.txt') %>% select(-index)
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1, standardize = FALSE)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
coef(lasso)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
betas <- lasso$beta
coef(lasso)
plot.glmnet(lasso, xvar='lambda', label=TRUE)
plot.glmnet(lasso, xvar='lambda', label=TRUE)
best_lambda <- lasso_csv$lambda.1se
best_lambda
resid(lasso)
preidct(lasso)
preidction(lasso)
prediction(lasso)
predict(lasso)
predict(lasso, x)
predict(lasso, x) - y
predict(lasso, x)[, 100] - y
predict(lasso, x)[, 50] - y
mean((predict(lasso, x)[, 50] - y) ^ 2)
dim(predict(lasso, x))
mean((predict(lasso, x)[, 73] - y) ^ 2)
mean((predict(lasso, x)[, 5] - y) ^ 2)
mean((predict(lasso, x)[, 73] - y) ^ 2)
ggplot(data.frame(resid=(predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1000)
ggplot(data.frame(resid=(predict(lasso, x)[, 73] - y) ^ 2)) + geom_point(aes(y=resid), x=1:1000)
predict(lasso, x)[, 73] - y) ^ 2)
predict(lasso, x)[, 73] - y) ^ 2))
ggplot(data.frame(resid=(predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1000)
ggplot(data.frame(resid=((predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1000)
predict(lasso, x)[, 73] - y) ^ 2
predict(lasso, x)[, 73] - y)^ 2
predict(lasso, x)[, 73] - y)^2
(predict(lasso, x)[, 73] - y)^2
ggplot(data.frame(resid=((predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1001)
ggplot(data.frame(resid=as.vector((predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1000)
data.frame(resid=as.vector((predict(lasso, x)[, 73] - y) ^ 2))
ggplot(data.frame(resid=as.vector((predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:900)
ggplot(data.frame(resid=as.vector((predict(lasso, x)[, 73] - y) ^ 2))) + geom_point(aes(y=resid), x=1:1000)
mean((predict(lasso, x)[, 73] - y) ^ 2))
mean((predict(lasso, x)[, 73] - y) ^ 2)
lm(longmon ~ ., data=data)
summary(lm(longmon ~ ., data=data))
l = lm(longmon ~ ., data=data)
l$residuals
mean((predict(l, x)[, 73] - y) ^ 2)
mean((predict(l) - y) ^ 2)
mean((predict(l) - y) ^ 2)
mean((predict(lasso, x)[, 73] - y) ^ 2)
best_lambda <- lasso_csv$lambda.1se
best_lambda
fit.linear <- lm(longmon ~ address, data=data)
summary(fit.linear)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_smooth(method='lm')
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_smooth(method='lm')
mean(resid(fit.linear)^2)
models.nl <- nls(longmon ~ b0  + exp(address*(b1)), data=data, start=list(b0=1, b1=0.1))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
models.nl <- nls(longmon ~ b0  + exp(address*(b1)) + address, data=data, start=list(b0=1, b1=0.1))
?nls
models.nl <- nls(longmon ~ b0  + exp(address*(b1)) + address, data=data, start=list(b0=1, b1=0.1), control = list(maxiter = 500))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
models.nl <- nls(longmon ~ b0  + exp(address*(b1)) + b2 * address, data=data, start=list(b0=1, b1=0.1, b2=1), control = list(maxiter = 500))
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
models.nl <- nls(longmon ~ b0  + exp(address*(b1) + b2) + b3 * address, data=data, start=list(b0=1, b1=0.1, b2=1, b3=1), control = list(maxiter = 500))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
?npregbw
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
library("np")
?npregbw
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
npplot(nw.bw, type="l")
model = npreg(bws=nw.bw, bandwidth=5);
summary(model)
npplot(nw.bw, type="l")
model = npreg(bws=nw.bw, bandwidth=1);
npplot(nw.bw, type="l")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic", bandwidth=5)
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic", bandwidth=5)
model = npreg(bws=nw.bw);
summary(model)
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc",  bandwidth=5)
model = npreg(bws=nw.bw);
summary(model)
npplot(nw.bw, type="l")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc",  bandwidth=5)
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc",  bandwidth=5)
model = npreg(bws=nw.bw);
o
o
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
summary(model)
npplot(nw.bw, type="l")
plot(x, y)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
npplot(nw.bw, type="l")
points(data$address, data$longmon)
npplot(nw.bw, type="l")
points(data$address, data$longmon)
plot(nw.bw, type="l")
points(data$address, data$longmon)
points(data$address, data$longmon)
plot(nw.bw, type="l")
plot(data$address, data$longmon)
plot(nw.bw, type="l")
plot(data$address, data$longmon)
?npplot
plot(data$address, data$longmon, nw.bw, type="l")
npplot(nw.bw, type="l")
npplot(nw.bw, type="l", xdat=data$address, ydat=data$longmon)
npplot(nw.bw, type="l", xdat=data$address, ydat=data$longmon)
npplot(nw.bw, type="l", data=data.frame(x=data$address, y=ydat=data$longmon))
npplot(nw.bw, type="l", data=data.frame(x=data$address, y=data$longmon))
npplot(nw.bw, type="l", data=data.frame(x=data$address, y=data$longmon), labels=TRUE)
npplot(nw.bw, type="l", data=data,)
npplot(nw.bw, type="l", data=data)
plot(nw.bw, type="l", data=data)
points(data$address, data$tenure)
plot(data$address, data$tenure)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
par(True)
par(TRUE)
plot(data$address, data$longmon)
par(TRUE)
npplot(nw.bw, type="l")
plot(data$address, data$longmon)
par(new = T)
npplot(nw.bw, type="l")
par(new = T)
plot(data$address, data$longmon, pch=2)
par(new = T)
npplot(nw.bw, type="l")
plot(data$address, data$longmon, pch=2)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
npplot(nw.bw, type="l")
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
summary(m.log)
odds.ratio(m.log)
?odds
??odds
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(churn))
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
summary(m.log)
exp(-4.4)
data$tenure
exp(-0.03)
step(glm(as.factor(churn) ~ ., data=data, family=binomial(logit)))
log.best <- glm(formula = as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
log.best <- glm(formula = as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
predict(log.best)
predict(log.best)[50:55]
prediction(log.best)[50:55]
predict(log.best)[50:55]
?predict
pred <- predict(log.best)[50:55]
probs
probs <- exp(pred)/(1+exp(pred))
probs
data[50:55]
data[,50:55]
data[50:55,]
pred <- predict(log.best, type='response')[50:55]
pred
pred <- predict(log.best, type='response')[50:55]
data[50:55,]
pred
predict <- predict(model, type = 'response')
predict <- predict(log.best, type = 'response')
#confusion matrix
table(dresstrain$Recommended, predict > 0.5)
#confusion matrix
table(data$churn, predict > 0.5)
#confusion matrix
table(data$churn, predict > 0.3)
#confusion matrix
table(data$churn, predict > 0.8)
#confusion matrix
table(data$churn, predict > 0.7)
#confusion matrix
table(data$churn, predict > 0.5)
plot(roc(as.factor(data$churn), predict(log.best)), print.auc = TRUE)
roc(as.factor(data$churn), predict(log.best))
plot(roc(as.factor(data$churn), predict(log.best)), print.auc = TRUE)
coords(my_roc, "best", ret = "threshold")
my_roc <- roc(as.factor(data$churn), predict(log.best))
coords(my_roc, "best", ret = "threshold")
plot(my_roc, print.auc = TRUE)
View(my_roc)
my_roc[["thresholds"]]
exp(-0.6681797)
exp(-0.6681797) / (1- exp(-0.6681797))
exp(-0.6681797) / (1+ exp(-0.6681797))
my_roc <- roc(as.factor(data$churn), predict(log.best))
best_thr <-  coords(my_roc, "best", ret = "threshold")
best_thr <- exp(best_thr) / (1+ exp(best_thr))
plot(my_roc, print.auc = TRUE)
best_thr
#confusion matrix
table(data$churn, predict > best_thr)
tree = rpart(longmon ~ ., data=data)
tree
prune(tree, cp=0.1)
tree = rpart(longmon ~ ., data=data, control = rpart.control(maxdepth = 10))
tree
exp(-0.6681797) / (1+ exp(-0.6681797))
?rpart
?prune
?snipping
tree = rpart(longmon ~ ., data=data, control = rpart.control(maxdepth = 10))
tree
mean(tree$pred == tree$left)
tree$pred
tree$left
?rpart
tree
data <- read_tsv('../data/telco.txt') %>% select(-index)
data
library (dplyr)
library(tidyverse)
library(glmnet)
library(ggplot2)
library("nlme")
library("np")
library(pROC)
library(rpart)
data <- read_tsv('../data/telco.txt') %>% select(-index)
data
x <- data %>% select(-longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
y <- as.matrix(y)
y <- data %>% select(longmon)
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
coef(lasso)
plot.glmnet(lasso, xvar='lambda', label=TRUE)
best_lambda <- lasso_csv$lambda.1se
best_lambda
fit.linear <- lm(longmon ~ address, data=data)
summary(fit.linear)
mean(resid(fit.linear)^2)
models.nl <- nls(longmon ~ b0  + exp(address*(b1) + b2) + b3 * address, data=data, start=list(b0=1, b1=0.1, b2=1, b3=1), control = list(maxiter = 500))
models.nl <- nls(longmon ~ b0  + exp(address*(b1) + b2) + b3 * address, data=data, start=list(b0=1, b1=0.1, b2=1, b3=1), control = list(maxiter = 500))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
summary(model)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
model
predict(model)
resid(model)
mean(resid(model)^2)
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
summary(m.log)
step(glm(as.factor(churn) ~ ., data=data, family=binomial(logit)))
log.best <- glm(formula = as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
pred <- predict(log.best, type='response')[50:55]
data[50:55,]
pred
#confusion matrix
table(data$churn, predict > 0.5)
predict <- predict(log.best, type = 'response')
#confusion matrix
table(data$churn, predict > 0.5)
#confusion matrix
table(data$churn, predict > 0.5)
my_roc <- roc(as.factor(data$churn), predict(log.best))
best_thr <- exp(best_thr) / (1+ exp(best_thr))
plot(my_roc, print.auc = TRUE)
best_thr <-  coords(my_roc, "best", ret = "threshold")
best_thr <- exp(best_thr) / (1+ exp(best_thr))
plot(my_roc, print.auc = TRUE)
best_thr
best_thr
#confusion matrix
table(data$churn, predict > best_thr)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
install.packages('glmnet')
install.packages('np')
install.packages('rpart')
install.packages("pROC")
library (dplyr)
library(tidyverse)
library(glmnet)
library(ggplot2)
library("nlme")
library("np")
library(pROC)
library(rpart)
data <- read_tsv('../data/telco.txt') %>% select(-index)
data
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
coef(lasso)
plot.glmnet(lasso, xvar='lambda', label=TRUE)
best_lambda <- lasso_csv$lambda.1se
best_lambda
fit.linear <- lm(longmon ~ address, data=data)
summary(fit.linear)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_smooth(method='lm')
mean(resid(fit.linear)^2)
models.nl <- nls(longmon ~ b0  + exp(address*(b1) + b2) + b3 * address, data=data, start=list(b0=1, b1=0.1, b2=1, b3=1), control = list(maxiter = 500))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
summary(model)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
mean(resid(model)^2)
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
summary(m.log)
step(glm(as.factor(churn) ~ ., data=data, family=binomial(logit)))
log.best <- glm(formula = as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
pred <- predict(log.best, type='response')[50:55]
data[50:55,]
pred
predict <- predict(log.best, type = 'response')
#confusion matrix
table(data$churn, predict > 0.5)
my_roc <- roc(as.factor(data$churn), predict(log.best))
best_thr <-  coords(my_roc, "best", ret = "threshold")
best_thr <- exp(best_thr) / (1+ exp(best_thr))
plot(my_roc, print.auc = TRUE)
best_thr
#confusion matrix
table(data$churn, predict > best_thr)
tree = rpart(longmon ~ ., data=data, control = rpart.control(maxdepth = 10))
tree
install.packages("rpart")
data <- read_tsv('../data/telco.txt') %>% select(-index)
data
x <- data %>% select(-longmon)
y <- data %>% select(longmon)
x <- model.matrix(~. -1, x)
y <- as.matrix(y)
lasso <- glmnet(x, y, family="gaussian", alpha=1)
lasso_csv <- cv.glmnet(x, y,family="gaussian", alpha=1)
betas <- lasso$beta
coef(lasso)
plot.glmnet(lasso, xvar='lambda', label=TRUE)
best_lambda <- lasso_csv$lambda.1se
best_lambda
fit.linear <- lm(longmon ~ address, data=data)
summary(fit.linear)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_smooth(method='lm')
mean(resid(fit.linear)^2)
models.nl <- nls(longmon ~ b0  + exp(address*(b1) + b2) + b3 * address, data=data, start=list(b0=1, b1=0.1, b2=1, b3=1), control = list(maxiter = 500))
summary(models.nl)
mean(resid(models.nl)^2)
ggplot(data, aes(y=longmon, x=address)) + geom_point() + geom_point(y=predict(models.nl), color='red')
nw.bw = npregbw(longmon ~ address, data=data,  regtype = "lc", bwmethod = "cv.aic")
model = npreg(bws=nw.bw);
summary(model)
plot(data$address, data$longmon)
npplot(nw.bw, type="l")
mean(resid(model)^2)
m.log <- glm(as.factor(churn) ~ ., data=data, family=binomial(logit))
summary(m.log)
step(glm(as.factor(churn) ~ ., data=data, family=binomial(logit)))
log.best <- glm(formula = as.factor(churn) ~ tenure + ed + employ + longmon +
wiremon, family = binomial(logit), data = data)
pred <- predict(log.best, type='response')[50:55]
data[50:55,]
pred
predict <- predict(log.best, type = 'response')
#confusion matrix
table(data$churn, predict > 0.5)
my_roc <- roc(as.factor(data$churn), predict(log.best))
best_thr <-  coords(my_roc, "best", ret = "threshold")
best_thr <- exp(best_thr) / (1+ exp(best_thr))
plot(my_roc, print.auc = TRUE)
best_thr
#confusion matrix
table(data$churn, predict > best_thr)
tree = rpart(longmon ~ ., data=data, control = rpart.control(maxdepth = 10))
tree
